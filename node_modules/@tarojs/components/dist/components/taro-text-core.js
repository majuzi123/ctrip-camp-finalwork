import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { c as classnames } from './index2.js';

const indexCss = "taro-text-core{display:inline;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:pre-wrap}.taro-text__selectable{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}";

const Text = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.selectable = false;
  }
  render() {
    const cls = classnames({
      'taro-text__selectable': this.selectable
    });
    return (h(Host, { class: cls }, h("slot", null)));
  }
  static get style() { return indexCss; }
}, [4, "taro-text-core", {
    "selectable": [4]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["taro-text-core"];
  components.forEach(tagName => { switch (tagName) {
    case "taro-text-core":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Text);
      }
      break;
  } });
}

const TaroTextCore = Text;
const defineCustomElement = defineCustomElement$1;

export { TaroTextCore, defineCustomElement };
