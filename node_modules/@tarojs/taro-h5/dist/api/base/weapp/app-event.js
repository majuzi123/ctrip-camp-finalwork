import Taro from '@tarojs/api';
import { parse } from 'query-string';
import { temporarilyNotSupport } from '../../../utils/index.js';
import { CallbackManager } from '../../../utils/handler.js';

const appShowCallbackManager = new CallbackManager();
const appHideCallbackManager = new CallbackManager();
const getApp = () => {
    var _a;
    const path = (_a = Taro.Current.page) === null || _a === void 0 ? void 0 : _a.path;
    return {
        /** 小程序切前台的路径 */
        path: path === null || path === void 0 ? void 0 : path.substring(0, path.indexOf('?')),
        /** 小程序切前台的 query 参数 */
        query: parse(location.search),
        /** 来源信息。 */
        referrerInfo: {},
        /** 小程序切前台的[场景值](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/scene.html) */
        scene: 0,
        /** shareTicket，详见[获取更多转发信息](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/share.html) */
        shareTicket: ''
    };
};
const appShowListener = () => {
    if (document.visibilityState !== 'hidden') {
        appShowCallbackManager.trigger(getApp());
    }
};
const appHideListener = () => {
    if (document.visibilityState === 'hidden') {
        appHideCallbackManager.trigger(getApp());
    }
};
// 应用级事件
const onUnhandledRejection = temporarilyNotSupport('onUnhandledRejection');
const onThemeChange = temporarilyNotSupport('onThemeChange');
const onPageNotFound = temporarilyNotSupport('onPageNotFound');
const onError = temporarilyNotSupport('onError');
const onAudioInterruptionEnd = temporarilyNotSupport('onAudioInterruptionEnd');
const onAudioInterruptionBegin = temporarilyNotSupport('onAudioInterruptionBegin');
const onAppShow = callback => {
    appShowCallbackManager.add(callback);
    if (appShowCallbackManager.count() === 1) {
        window.addEventListener('visibilitychange', appShowListener);
    }
};
const onAppHide = callback => {
    appHideCallbackManager.add(callback);
    if (appHideCallbackManager.count() === 1) {
        window.addEventListener('visibilitychange', appHideListener);
    }
};
const offUnhandledRejection = temporarilyNotSupport('offUnhandledRejection');
const offThemeChange = temporarilyNotSupport('offThemeChange');
const offPageNotFound = temporarilyNotSupport('offPageNotFound');
const offError = temporarilyNotSupport('offError');
const offAudioInterruptionEnd = temporarilyNotSupport('offAudioInterruptionEnd');
const offAudioInterruptionBegin = temporarilyNotSupport('offAudioInterruptionBegin');
const offAppShow = callback => {
    appShowCallbackManager.remove(callback);
    if (appShowCallbackManager.count() === 0) {
        window.removeEventListener('visibilitychange', appShowListener);
    }
};
const offAppHide = callback => {
    appHideCallbackManager.remove(callback);
    if (appHideCallbackManager.count() === 0) {
        window.removeEventListener('visibilitychange', appHideListener);
    }
};

export { offAppHide, offAppShow, offAudioInterruptionBegin, offAudioInterruptionEnd, offError, offPageNotFound, offThemeChange, offUnhandledRejection, onAppHide, onAppShow, onAudioInterruptionBegin, onAudioInterruptionEnd, onError, onPageNotFound, onThemeChange, onUnhandledRejection };
//# sourceMappingURL=app-event.js.map
