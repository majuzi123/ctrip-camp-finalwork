{"version":3,"file":"handler.js","sources":["../../src/utils/handler.ts"],"sourcesContent":["import { isFunction } from '@tarojs/shared'\n\ntype TCallback<T = Partial<TaroGeneral.CallbackResult>> = (res: T) => Promise<void> | void\ninterface IMethodParam<T = Partial<TaroGeneral.CallbackResult>> {\n  name: string\n  success?: TCallback<T & TaroGeneral.CallbackResult>\n  fail?: TCallback\n  complete?: TCallback\n}\ninterface IMockPromise {\n  resolve?: typeof Promise.resolve | TFunc\n  reject?: typeof Promise.reject | TFunc\n}\n\nexport class MethodHandler<T = Partial<TaroGeneral.CallbackResult>> {\n  methodName: string\n\n  protected __success?: TCallback<T>\n  protected __fail?: TCallback\n  protected __complete?: TCallback\n\n  protected isHandlerError = false\n\n  constructor ({ name, success, fail, complete }: IMethodParam<T>) {\n    this.methodName = name\n    this.__success = success\n    this.__fail = fail\n    this.__complete = complete\n\n    this.isHandlerError = isFunction(this.__complete) || isFunction(this.__fail)\n  }\n\n  success<U = Record<string, unknown>> (res: Partial<T> & Partial<TaroGeneral.CallbackResult> = {}, promise: IMockPromise = {}): Promise<T & U & TaroGeneral.CallbackResult> {\n    if (!res.errMsg) {\n      res.errMsg = `${this.methodName}:ok`\n    }\n    isFunction(this.__success) && this.__success(res as T)\n    isFunction(this.__complete) && this.__complete(res)\n\n    const { resolve = Promise.resolve.bind(Promise) } = promise\n    return resolve(res as Required<T & U & TaroGeneral.CallbackResult>)\n  }\n\n  fail<U = Record<string, unknown>> (res: Partial<T> & Partial<TaroGeneral.CallbackResult> = {}, promise: IMockPromise = {}): Promise<T & U & TaroGeneral.CallbackResult> {\n    if (!res.errMsg) {\n      res.errMsg = `${this.methodName}:fail`\n    } else {\n      res.errMsg = `${this.methodName}:fail ${res.errMsg}`\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(res.errMsg)\n    }\n    isFunction(this.__fail) && this.__fail(res)\n    isFunction(this.__complete) && this.__complete(res)\n\n    const {\n      resolve = Promise.resolve.bind(Promise),\n      reject = Promise.reject.bind(Promise)\n    } = promise\n    return this.isHandlerError\n      ? resolve(res as Required<T & U & TaroGeneral.CallbackResult>)\n      : reject(res)\n  }\n}\n\ntype TCallbackManagerParam = (...arr: unknown[]) => void\ninterface ICallbackManagerOption {\n  callback?: TCallbackManagerParam\n  ctx?: any\n  [key: string]: unknown\n}\ntype TCallbackManagerListItem = (TCallbackManagerParam | ICallbackManagerOption)\ntype TCallbackManagerList = TCallbackManagerListItem[]\n\nexport class CallbackManager {\n  callbacks: TCallbackManagerList = []\n\n  /**\n   * 添加回调\n   * @param {{ callback: function, ctx: any } | function} opt\n   */\n  add = (opt?: TCallbackManagerListItem) => {\n    if (opt) this.callbacks.push(opt)\n  }\n\n  /**\n   * 移除回调\n   * @param {{ callback: function, ctx: any } | function} opt\n   */\n  remove = (opt?: TCallbackManagerListItem) => {\n    if (opt) {\n      let pos = -1\n      this.callbacks.forEach((callback, k) => {\n        if (callback === opt) {\n          pos = k\n        }\n      })\n      if (pos > -1) {\n        this.callbacks.splice(pos, 1)\n      }\n    }\n  }\n\n  /**\n   * 获取回调函数数量\n   * @return {number}\n   */\n  count = () => {\n    return this.callbacks.length\n  }\n\n  /**\n   * 触发回调\n   * @param  {...any} args 回调的调用参数\n   */\n  trigger = (...args: TCallbackManagerList) => {\n    this.callbacks.forEach(opt => {\n      if (isFunction(opt)) {\n        opt(...args)\n      } else {\n        const { callback, ctx } = opt\n        isFunction(callback) && callback.call(ctx, ...args)\n      }\n    })\n  }\n}\n"],"names":[],"mappings":"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"}